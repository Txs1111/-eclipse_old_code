/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-03-14 06:36:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.chat_room_allmessage;
import java.util.StringTokenizer;

public final class chat_005froom_005fmessages_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.chat_room_allmessage");
    _jspx_imports_classes.add("java.util.StringTokenizer");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Message.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_style.css\" />\r\n");
      out.write("<link href=\"Css/Homepage.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"Css/Public_Color/orange.css\" rel=\"stylesheet\" />\r\n");
      out.write("<body onload=\"window.scrollTo(0,document.body.scrollHeight); \">\r\n");
      out.write("\t<!--横向20 纵向19 -->\r\n");
      out.write("\t");

		request.setCharacterEncoding("UTF-8"); //或者指定的编码(GBK或其他)	
		String ID = (String) request.getSession().getAttribute("ID");
		String content = "";
		chat_room_allmessage bean = new chat_room_allmessage();
		content = bean.getdata();
		StringTokenizer chart = new StringTokenizer(content, "鰶");
		String reID = "";
		String head_photo = "";
		String name = "";
		String text = "";
		int num = chart.countTokens();
		num = num / 4;
		for (int a = 0; a < num; a++) {
			reID = chart.nextToken();
			head_photo = chart.nextToken();
			name = chart.nextToken();
			text = chart.nextToken();
			int line = 0;
			int num1 = text.getBytes("gbk").length;
			for (;;) {
				num1 = num1 - 16;
				if (num1 == -16) {
					line = 1;
					break;
				} else if (num1 > -16 && num1 < 0) {
					line = line + 1;
					break;
				} else if (num1 > 0) {
					line = line + 1;
				}
			}
			int chatbox = 22 * line;
			int height = 50;
			if (chatbox > height) {
				height = chatbox;
			}
			height = height + 10;
			if (reID.equals(ID)) {
	
      out.write("\r\n");
      out.write("\t<div style=\"width:100%;height:");
      out.print(height);
      out.write("px;margin-top:5px;float:right;\">\r\n");
      out.write("\t\t<div style=\"width:40px;height:");
      out.print(height);
      out.write("px;float:right;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<img style=\"height: 40px; width: 40px; border-radius: 20px;\" src=\"img/head_photo/");
      out.print(head_photo);
      out.write(".jpg\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div style=\"width: 40px; height: 10px; line-higth: 10px; font-size: 10px;\" align=\"center\">\r\n");
      out.write("\t\t\t\t<font style=\"color: #FF8448;\">");
      out.print(name);
      out.write("</font>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"width: 60%; height: 15px; float: right;\"></div>\r\n");
      out.write("\t\t<div style=\"border-radius:3px;width:60%;float:right; height:");
      out.print(chatbox);
      out.write("px;padding:3px;white-space:normal;word-break:break-all; over-flow:hidden;\" class=\"light-color\">\r\n");
      out.write("\t\t\t");
      out.print(text);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

		} else {
	
      out.write("\r\n");
      out.write("\t<div style=\"width:100%;height:");
      out.print(height);
      out.write("px;margin-top:10px;float:left;\">\r\n");
      out.write("\t\t<div style=\"width:40px;height:");
      out.print(height);
      out.write("px;float:left;\">\r\n");
      out.write("\t\t\t<!-- <form action=\"goto_user_personal_homepage\"method=\"post\"> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<img style=\"height: 40px; width: 40px; border-radius: 20px;\" src=\"img/head_photo/");
      out.print(head_photo);
      out.write(".jpg\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- </form> -->\r\n");
      out.write("\t\t\t<div style=\"width: 40px; height: 10px; line-higth: 10px; font-size: 10px;\" align=\"center\">\r\n");
      out.write("\t\t\t\t<font style=\"color: #FF8448;\">");
      out.print(name);
      out.write("</font>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"width: 60%; height: 15px; float: left;\"></div>\r\n");
      out.write("\t\t<div style=\"border-radius:3px;width:60%;float:left; height:");
      out.print(chatbox);
      out.write("px;padding:3px;white-space:normal;word-break:break-all; over-flow:hidden;\" class=\"dinylight-color\">\r\n");
      out.write("\t\t\t");
      out.print(text);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");

		}
		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<meta http-equiv=\"refresh\" content=\"5;url=chat_room_messages.jsp\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
