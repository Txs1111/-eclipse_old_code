/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-04-03 11:02:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Set_bean;

public final class Set_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Set_bean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	/*------------------------------------------------------------------------------------------------
	修改人:王旭升		     
	修改时间 :2020-12-30 9:29	
	修改内容:添加注释		
	版本号			 
	-------------------------------------------------------------------------------------------------*/

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>设置</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#F4F5F7\">\r\n");
      out.write("\t");

		String ID = null;
		request.setCharacterEncoding("UTF-8");//或者指定的编码(GBK或其他)
		if (request.getAttribute("ID") != null) {
			ID = (String) request.getAttribute("ID");
		}
		Set_bean bean = new Set_bean(ID);
		bean.head();
		String role = bean.role;
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "season.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("level", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.level), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("role", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(role), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("nickiname", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.nickiname), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("sign", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.sign), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("background", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.background), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("headphoto", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.headphoto), request.getCharacterEncoding()), out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "lead.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<div id=\"set\">\r\n");
      out.write("\t\t<!-- 左边菜单 -->\r\n");
      out.write("\t\t<div id=\"Set_left\">\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "set_menu.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 右边内容 -->\r\n");
      out.write("\t\t<div id=\"Set_right\">\r\n");
      out.write("\t\t\t<iframe src=\"Personal_set.jsp\" width=\"100%\" height=\"100%\" scrolling=\"yes\" frameborder=\"0\"> </iframe>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script src=\"js/jquery-3.4.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$('#fss')\r\n");
      out.write("\t\t\t\t.click(\r\n");
      out.write("\t\t\t\t\t\tfunction() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$(this).removeClass(\"Office\");\r\n");
      out.write("\t\t\t\t\t\t\t$(this).addClass(\"Office_v dark-color\");\r\n");
      out.write("\t\t\t\t\t\t\t$('.Work_v').addClass('Wrok');\r\n");
      out.write("\t\t\t\t\t\t\t$('.Work').removeClass('Wrok_v dark-color');\r\n");
      out.write("\t\t\t\t\t\t\t$('.attention_v').addClass('attention');\r\n");
      out.write("\t\t\t\t\t\t\t$('.attention').removeClass(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'attention_v dark-color');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$('#Set_right')\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t'<iframe src=\"Personal_set.jsp\" width=\"100%\" height=\"100%\" scrolling=\"yes\" frameborder=\"0\"> </iframe>');\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t$('.Work')\r\n");
      out.write("\t\t\t\t.click(\r\n");
      out.write("\t\t\t\t\t\tfunction() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$(this).removeClass(\"Wrok\");\r\n");
      out.write("\t\t\t\t\t\t\t$(this).addClass(\"Wrok_v dark-color\");\r\n");
      out.write("\t\t\t\t\t\t\t$('.Office_v').addClass(\"Office\");\r\n");
      out.write("\t\t\t\t\t\t\t$('.Office').removeClass('Office_v dark-color');\r\n");
      out.write("\t\t\t\t\t\t\t$('.attention_v').addClass('attention');\r\n");
      out.write("\t\t\t\t\t\t\t$('.attention').removeClass(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t'attention_v dark-color');\r\n");
      out.write("\t\t\t\t\t\t\t//$('.attention').removeClass('dark-color');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$('#Set_right')\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t'<iframe src=\"Message_set.jsp\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"> </iframe>');\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t$('.attention')\r\n");
      out.write("\t\t\t\t.click(\r\n");
      out.write("\t\t\t\t\t\tfunction() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$(this).removeClass('attention');\r\n");
      out.write("\t\t\t\t\t\t\t$(this).addClass('attention_v dark-color');\r\n");
      out.write("\t\t\t\t\t\t\t$('.Work_v').addClass('Work');\r\n");
      out.write("\t\t\t\t\t\t\t$('.Work').removeClass('Work_v dark-color');\r\n");
      out.write("\t\t\t\t\t\t\t$('.Office_v').addClass(\"Office\");\r\n");
      out.write("\t\t\t\t\t\t\t$('.Office').removeClass('Office_v dark-color');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$('#Set_right')\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t'<iframe src=\"Security_set.jsp\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"> </iframe>');\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$('#lead_set').css('border-bottom-style', 'solid');\r\n");
      out.write("\t\tvar $logo = $('#sign_list li');\r\n");
      out.write("\r\n");
      out.write("\t\t$logo.mouseenter(function() {\r\n");
      out.write("\t\t\t$(this).css('border-bottom-style', 'solid');\r\n");
      out.write("\t\t\t$('#lead_set').css('border-bottom-style', 'none');\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$logo.mouseleave(function() {\r\n");
      out.write("\t\t\t$logo.css('border-bottom-style', 'none');\r\n");
      out.write("\t\t\t$('#lead_set').css('border-bottom-style', 'solid');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
