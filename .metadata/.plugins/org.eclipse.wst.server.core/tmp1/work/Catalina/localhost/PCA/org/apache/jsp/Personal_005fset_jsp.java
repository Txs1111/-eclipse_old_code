/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-04-03 11:02:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.StringTokenizer;
import bean.personal_set_bean;

public final class Personal_005fset_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.StringTokenizer");
    _jspx_imports_classes.add("bean.personal_set_bean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
/*------------------------------------------------------------------------------------------------
修改人			     
修改时间 		
修改内容		
版本号			 
-------------------------------------------------------------------------------------------------*/
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_style.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_Color/orange.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Set.css\"/>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body style=\"overflow-y:auto;\">\r\n");
      out.write("\t\t");

		  String get_id = null;
		  if(request.getSession().getAttribute("ID")!=null&&!request.getSession().getAttribute("ID").equals("")){
			  get_id =(String)request.getSession().getAttribute("ID");
		  }
		  String head = request.getParameter("head"); //接收头像
		  String nick = request.getParameter("nick"); //接收昵称
	      String background = request.getParameter("background"); //接收背景图
	      String signature_text = request.getParameter("signature_text"); //接收签名
	      
	      String[] data = new String[5];
	      data[0] = get_id;
		  data[1] = nick;
		  data[2] = signature_text;
		  data[3] = head;
		  data[4] = background;
           
		  personal_set_bean pb = new personal_set_bean(data);
	      int number = 1;

		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t<form id=\"voteform\" action=\"Personal_set.jsp\" method=\"post\">\r\n");
      out.write("\t\t<div id=\"theme\" style=\"\">\r\n");
      out.write("\t\t        <div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t\t&nbsp;┃&nbsp;个性设置\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"title\">\r\n");
      out.write("\t\t\t\t\t<font class=\"small-font\">昵称：</font>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"nick\" name=\"nick\" form=\"voteform\"/>\r\n");
      out.write("\t\t\t\t\t<font class=\"small-font\" color=\"#bfbfbf\"></font>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"modify_theme\">\r\n");
      out.write("\t\t\t\t\t<div id=\"modify_theme_head\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"small-font\">主题：</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"content\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"direcation\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"front\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"javascript:;\" id=\"front_url\" name=\"number\"><font size=\"5\" ><</font></a>\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t    <div id=\"queen\">\r\n");
      out.write("\t\t\t\t\t\t\t    <a href=\"javascript:;\" id=\"queen_url\" name=\"number\"><font size=\"5\">></font></a>\r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"content_img\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"img/theme_photo/1.png\" id=\"img\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"background\" value=\"\" style=\"display:none;\" id=\"input_b\"/>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"profile_photo\">\r\n");
      out.write("\t\t\t\t\t<div class=\"profile_photo_theme\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"small-font\">头像：</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"avatar\">\r\n");
      out.write("                         <input type=\"text\" style=\"display:none;\" id=\"input_hd\" name=\"head\"  value=\"\"/>\r\n");
      out.write("\t\t\t\t\t");

					String content = pb.showHead_photo();
					
					StringTokenizer st = new StringTokenizer(content,"熏嚩醃");
					int a = 1;
					String h_photo = "";
					while(st.hasMoreTokens()){
						h_photo = st.nextToken();
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"avatar_img\">\r\n");
      out.write("\t\t\t\t\t\t    <img src=\"img/head_photo/");
      out.print(h_photo);
      out.write("\" class=\"head_photo img_1\" id=\"");
      out.print(h_photo);
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");
a++;}
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"signature\" style=\"float: left; margin-left: 2%;margin-top:5px;\">\r\n");
      out.write("\t\t\t\t\t<div id=\"signature_text\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"small-font\">签名：</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"signature_texts\" >\r\n");
      out.write("\t\t\t\t\t    <textarea cols=\"98\" rows=\"\" name=\"signature_text\" id=\"signature_textarea\" ></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button class=\"normal-color\" id=\"submit\" type=\"submit\" style=\"border: 0;outline: none; margin-right:50px;margin-top:3px;\">\r\n");
      out.write("\t\t\t\t    <font class=\"small-font\" color=\"#ffffff\">提交</font>\r\n");
      out.write("\t\t\t    </button>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t</div>\t \r\n");
      out.write("\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script src=\"js/jquery-3.4.1.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("    $(function(){\r\n");
      out.write("    \t  $('.img_1').click(function(){\r\n");
      out.write("       \t  $('#input_hd').val($(this).attr('id'))\r\n");
      out.write("       \t  $('.img_1').removeClass(\"head_photo_img\");\r\n");
      out.write("       \t  $(this).addClass(\"head_photo_img\");\r\n");
      out.write("       \t  $(this).removeClass(\"avatar_img\");\r\n");
      out.write("   \t\t\tconsole.log($('#input_hd').val());\r\n");
      out.write("       \t    console.log($(this).attr('class'));\r\n");
      out.write("         });\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("      $('#img').click(function(){\r\n");
      out.write("    \t  $(this).addClass('head_photo_img');\r\n");
      out.write("    \t  $('#input_b').val($(this).attr('src'));\r\n");
      out.write("         \tconsole.log($('#input_b').val());\r\n");
      out.write("      });\r\n");
      out.write("      $('#front_url').click(function(){\r\n");
      out.write("    \t  $('#img').removeClass('head_photo_img');\r\n");
      out.write("    \t  $('#input_h').val('front_url');\r\n");
      out.write("\t\t\tconsole.log($('#input_h').val());\r\n");
      out.write("      }); \r\n");
      out.write("      $('#queen_url').click(function(){\r\n");
      out.write("    \t  $('#img').removeClass('head_photo_img');\r\n");
      out.write("    \t  $('#input_q').val('queen_url');\r\n");
      out.write("\t\t\tconsole.log($('#input_q').val());\r\n");
      out.write("      }); \r\n");
      out.write("      $('#submit').click(function(){\r\n");
      out.write("    \t  $('#input_s').val('submit');\r\n");
      out.write("\t\t\tconsole.log($('#input_s').val());\r\n");
      out.write("      }); \r\n");
      out.write("      \r\n");
      out.write("    })   \t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\twindow.onload = function(){\r\n");
      out.write("\t\t\t    var front = document.getElementById('front');\r\n");
      out.write("\t\t\t    var queen = document.getElementById('queen');\r\n");
      out.write("\t\t\t    var img = document.getElementById('img');\r\n");
      out.write("\t\t\t    var arrUrl = ['img/theme_photo/1.png','img/theme_photo/2.png','img/theme_photo/3.png','img/theme_photo/4.png','img/theme_photo/5.png','img/theme_photo/6.png','img/theme_photo/7.png','img/theme_photo/8.png','img/theme_photo/9.png','img/theme_photo/10.png','img/theme_photo/11.png','img/theme_photo/12.png','img/theme_photo/13.png','img/theme_photo/14.png','img/theme_photo/15.png','img/theme_photo/16.png','img/theme_photo/17.png','img/theme_photo/18.png','img/theme_photo/19.png'];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t    var num = 0;\r\n");
      out.write("\t\t\t    // 初始化显示内容\r\n");
      out.write("\t\t\t    function fnTab(){//重复的代码要用函数包起来\r\n");
      out.write("\t\t\t        img.src = arrUrl[num];//动态获取数组中图片，先加载第一张图片，因为num是0\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    fnTab();//调用函数，fnTab()代表执行函数里面的三行代码\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t    queen.onclick = function(){\r\n");
      out.write("\t\t\t        num ++;//num自增1\r\n");
      out.write("\t\t\t        if(num == arrUrl.length){//如果num的值超过数组的长度\r\n");
      out.write("\t\t\t            num = 0;//恢复到第一张图片（数组中是从0 开始数）\r\n");
      out.write("\t\t\t        }               \r\n");
      out.write("\t\t\t        fnTab();// 然后相应加载的内容进行变动\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    front.onclick = function(){\r\n");
      out.write("\t\t\t        num --;\r\n");
      out.write("\t\t\t        if(num == -1){\r\n");
      out.write("\t\t\t            num = arrUrl.length - 1;//如果图片已经在第一张，还点击上一张，那么让图片显示最后一张，即数组长度减1为数组最后一张图片\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t        fnTab();\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
