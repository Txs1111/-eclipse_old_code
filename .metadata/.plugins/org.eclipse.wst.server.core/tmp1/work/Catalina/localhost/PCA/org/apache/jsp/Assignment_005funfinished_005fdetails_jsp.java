/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-02-08 11:13:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.StringTokenizer;
import bean.getmissioninf;
import dao.submit_mission;

public final class Assignment_005funfinished_005fdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.StringTokenizer");
    _jspx_imports_classes.add("bean.getmissioninf");
    _jspx_imports_classes.add("dao.submit_mission");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
/*------------------------------------------------------------------------------------------------
修改人			     
修改时间 		
修改内容		
版本号			 
-------------------------------------------------------------------------------------------------*/
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title></title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_style.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Assignment.css\"/>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"./Css/Public_Color/orange.css\" />\r\n");
      out.write("\t</head>\r\n");
      out.write("<style>\r\n");
      out.write("\tbutton{\r\n");
      out.write("\t\tborder:0;\r\n");
      out.write("\t\toutline:none;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\t<body  bgcolor=\"#F4F5F7\">\r\n");
      out.write("\t");

	request.setCharacterEncoding("UTF-8");
	String missionID=request.getParameter("missionID");
	getmissioninf get=new getmissioninf(missionID);
	StringTokenizer chart=new StringTokenizer(get.missioninf,"鰶");
	
	String tips="";
	if("1".equals(request.getParameter("sub"))){
		String work=request.getParameter("work");
		if(work==null||"".equals(work))
		{
			tips="不能提交空的作业!";
		}else
		{
				submit_mission sub=new  submit_mission((String)request.getSession().getAttribute("ID"),missionID,work);
				tips="nice~提交成功!";
		}
	}
	
      out.write("\r\n");
      out.write("\t<!--头部信息-->\r\n");
      out.write("\t\t<div class=\"Details_whole_block\" style=\"width:75%;\"style=\"margin-top:0px;\">\r\n");
      out.write("\t\t<form action=\"Assignment.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t<div class=\"big-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;\r\n");
      out.write("\t\t\t\t<button class=\"middle-font font-light-color\"name=\"ID\" value=\"");
      out.print((String)request.getSession().getAttribute("ID") );
      out.write("\" style=\"background-color: #FAFAFA\" >未完成任务</button>\r\n");
      out.write("\t\t\t\t / ");
      out.print(chart.nextToken() );
      out.write("\r\n");
      out.write("\t\t\t\t<img src=\"img/lead_photo/返回.png\"style=\"width:30px;height:25px;float:right;margin-top: 10px;\">\r\n");
      out.write("\t\t\t\t<form action=\"Assignment.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t<button class=\"middle-font font-light-color\"name=\"ID\" value=\"");
      out.print((String)request.getSession().getAttribute("ID") );
      out.write("\" style=\"float:right;background-color: #FAFAFA;margin-top: 10px;\" >返回上一级</button>\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t<div class=\"body_block\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!--详细内容展示 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\" style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;发布日期：");
      out.print(chart.nextToken() );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\" style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;截止日期：");
      out.print(chart.nextToken() );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\" style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;语言：");
      out.print(chart.nextToken() );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\" style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;类型：");
      out.print(chart.nextToken() );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\"style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;最高可获积分：");
      out.print(chart.nextToken() );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B font-normal-color\" style=\"margin-left: 2.5%;margin-top: 10px;\">&nbsp;难度：\r\n");
      out.write("\t\t\t\t\t");

					String nan=chart.nextToken();
					if("1".equals(nan))
					{
						out.println("简单");
					}
					else if("2".equals(nan))
					{
						out.println("中等");
					}
					else 
					{
						out.println("困难");
					}
					
      out.write("</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"small_block  middle-font-B  dinylight-color\" style=\"color:grey;width:95%;margin-left: 2.5%;\">&nbsp;✦&nbsp;任务要求</div>\r\n");
      out.write("\t\t\t\t\t<textarea  readonly=\"readonly\" class=\"inf_block middle-font dinylight-color\">");
      out.print(chart.nextToken() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</textarea>\r\n");
      out.write("\t\r\n");
      out.write("\t<!--任务提交表单 -->\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"foin\">\r\n");
      out.write("\t\t\t\t\t<div class=\"foin_block_dis\"></div>\t\r\n");
      out.write("\t\t\t\t\t<div class=\"foin_block\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<button style=\"border:0;width:90px;height:30px;background-color: white;\" class=\"font-normal-color\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"width:20px;height:20px;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"img/lead_photo/图片.png\" style=\"width: 100%; height: 100%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>上传图片(未实现)\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<button style=\"margin-top: 12px;border:0;width:110px;height:30px;background-color: white;\" class=\"font-normal-color\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"width:20px;height:20px;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"img/lead_photo/代码.png\" style=\"width: 90%; height: 90%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>上传代码文件(未实现)\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<form action=\"Assignment_unfinished_details.jsp\"method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t<input style=\"display:none\"name=\"missionID\"value=\"");
      out.print(missionID);
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"textarea_style\" name=\"work\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"middle-font light-color white-font submit_style\"value=\"1\"name=\"sub\">提交</button>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"width:100%;height:25px;font-size:20px;line-height:25px;color:red;\"align=\"center\">");
      out.print(tips );
      out.write(" </div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t</div>\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("<script  type=\"text/javascript\" charset=\"utf-8\">\r\n");
      out.write("var back = document.getElementById(\"back\");\r\n");
      out.write("back.onclick = function(){\r\n");
      out.write("\t window.location.href=\"Assignment_unfinish.jsp\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
