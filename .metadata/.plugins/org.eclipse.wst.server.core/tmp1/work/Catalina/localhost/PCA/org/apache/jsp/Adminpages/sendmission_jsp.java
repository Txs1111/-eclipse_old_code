/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-04-03 11:02:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Adminpages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.sendmission_bean;
import dao.Admin_tools;
import java.util.StringTokenizer;

public final class sendmission_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dao.Admin_tools");
    _jspx_imports_classes.add("java.util.StringTokenizer");
    _jspx_imports_classes.add("bean.sendmission_bean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../Css/Public_Color/orange.css\" />\r\n");
      out.write("<link href=\"../Css/Public_style.css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Admin_lead.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("block_id", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("1", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<div style=\"width: 87.5%; height: 824px; margin-left: 0.1%; float: left;\" class=\"dinylight-color\">\r\n");
      out.write("\t\t");

			String ID = (String) request.getSession().getAttribute("ID");
			request.setCharacterEncoding("UTF-8");
			String tittle = "";
			String enddate = "--";
			String content = "";
			String point = "";
			String tips = "";
			if ("1".equals(request.getParameter("send"))) {
				if ((!"0".equals(request.getParameter("year")) && !"0".equals(request.getParameter("month"))
						&& !"0".equals(request.getParameter("date")))) {
					enddate = request.getParameter("year") + "-" + request.getParameter("month") + "-"
							+ request.getParameter("day");

					if (request.getParameter("tittle").length() > 15) {
						tips = "标题过长";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if (request.getParameter("tittle") == null || "".equals(request.getParameter("tittle"))) {
						tips = "未设置标题";
						point = request.getParameter("point");
						content = request.getParameter("content");
					} else if (request.getParameter("content") == null || "".equals(request.getParameter("content"))) {
						tips = "未添加内容";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
					} else if ("0".equals(request.getParameter("language"))
							&& (request.getParameter("newlanguage") == null
									|| "".equals(request.getParameter("newlanguage")))) {
						tips = "任务语言未填写";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if ("0".equals(request.getParameter("type")) && (request.getParameter("newtype") == null
							|| "".equals(request.getParameter("newtype")))) {
						tips = "任务类型未填写";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if (request.getParameter("point") == null || "".equals(request.getParameter("point"))) {
						tips = "未设置得分";
						content = request.getParameter("content");
						tittle = request.getParameter("tittle");
					} else {
						Admin_tools tool = new Admin_tools(ID);
						tool.send_mission(request.getParameter("tittle"), request.getParameter("content"),
								request.getParameter("type"), request.getParameter("difficult"),
								request.getParameter("language"), request.getParameter("point"), enddate,
								request.getParameter("newlanguage"), request.getParameter("newtype"));
						tips = "提交成功";
					}
				} else if (("0".equals(request.getParameter("year")) && "0".equals(request.getParameter("month"))
						&& "0".equals(request.getParameter("day")))) {

					enddate = "--";
					if (request.getParameter("tittle").length() > 15) {
						tips = "标题过长";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if (request.getParameter("tittle") == null || "".equals(request.getParameter("tittle"))) {
						tips = "未设置标题";
						point = request.getParameter("point");
						content = request.getParameter("content");
					} else if (request.getParameter("content") == null || "".equals(request.getParameter("content"))) {
						tips = "未添加内容";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
					} else if ("0".equals(request.getParameter("language"))
							&& (request.getParameter("newlanguage") == null
									|| "".equals(request.getParameter("newlanguage")))) {
						tips = "任务语言未填写";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if ("0".equals(request.getParameter("type")) && (request.getParameter("newtype") == null
							|| "".equals(request.getParameter("newtype")))) {
						tips = "任务类型未填写";
						point = request.getParameter("point");
						tittle = request.getParameter("tittle");
						content = request.getParameter("content");
					} else if (request.getParameter("point") == null || "".equals(request.getParameter("point"))) {
						tips = "未设置得分";
						content = request.getParameter("content");
						tittle = request.getParameter("tittle");
					} else {
						Admin_tools tool = new Admin_tools(ID);
						tool.send_mission(request.getParameter("tittle"), request.getParameter("content"),
								request.getParameter("type"), request.getParameter("difficult"),
								request.getParameter("language"), request.getParameter("point"), enddate,
								request.getParameter("newlanguage"), request.getParameter("newtype"));
						tips = "提交成功";
						tool.con.close();

					}
				} else {
					point = request.getParameter("point");
					tittle = request.getParameter("tittle");
					content = request.getParameter("content");
					tips = "日期未补完";
				}

			}
			sendmission_bean bean = new sendmission_bean(ID);
			System.out.println(ID);
			bean.getmissiontype();
			bean.getmissionlanguage();
			StringTokenizer chart1 = new StringTokenizer(bean.missiontypes, "+");
			bean.con.close();
		
      out.write("\r\n");
      out.write("\t\t<form action=\"sendmission.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"margin-bottom: 2px; float: left; width: 100%; margin-right: 0.2%;\">&nbsp;┃&nbsp;布置任务</div>\r\n");
      out.write("\t\t\t<div style=\"width: 49.9%; margin-right: 0.2%; height: 200px; float: left;\">\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"margin-bottom: 2px; float: left; width: 100%; margin-right: 0.2%;\">&nbsp;-&nbsp;任务标题(十五字以内)</div>\r\n");
      out.write("\t\t\t\t<input style=\"width: 100%; height: 35px; margin-bottom: 3px;\" name=\"tittle\" value=\"");
      out.print(tittle);
      out.write("\">\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"margin-bottom: 2px; float: left; width: 100%; margin-right: 0.2%;\">&nbsp;-&nbsp;任务要求</div>\r\n");
      out.write("\t\t\t\t<textarea style=\"width: 100%; height: 252px; margin-bottom: 3px;\" name=\"content\">");
      out.print(content);
      out.write("</textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"width: 49%; margin-right: 0.1%; height: 370px; float: left;\">\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%; margin-right: 0.2%;\">&nbsp;-&nbsp;任务类型</div>\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%;\">&nbsp;-&nbsp;任务难度</div>\r\n");
      out.write("\t\t\t\t<select style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%; height: 35px;\" name=\"type\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">--</option>\r\n");
      out.write("\t\t\t\t\t");

						StringTokenizer chart2 = null;
						int num = chart1.countTokens();
						for (int a = 0; a < num; a++) {
							chart2 = new StringTokenizer(chart1.nextToken(), "_");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(chart2.nextToken());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(chart2.nextToken());
      out.write("\r\n");
      out.write("\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<select style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%; height: 35px;\" name=\"difficult\">\r\n");
      out.write("\t\t\t\t\t");

						for (int a = 1; a <= 3; a++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(a);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(a);
      out.write("\r\n");
      out.write("\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%; margin-right: 0.2%;\">&nbsp;-&nbsp;任务语言</div>\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%;\">&nbsp;-&nbsp;任务最高分</div>\r\n");
      out.write("\t\t\t\t<select style=\"float: left; margin-bottom: 2px; float: left; width: 49.9%; height: 35px;\" name=\"language\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">--</option>\r\n");
      out.write("\t\t\t\t\t");

						chart1 = new StringTokenizer(bean.missionlanguage, "/");
						num = chart1.countTokens();
						for (int a = 0; a < num; a++) {
							chart2 = new StringTokenizer(chart1.nextToken(), "_");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(chart2.nextToken());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(chart2.nextToken());
      out.write("\r\n");
      out.write("\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<input style=\"float: right; margin-bottom: 2px; float: left; width: 49.2%; height: 33px; border: 1px solid gray;\" name=\"point\" value=\"");
      out.print(point);
      out.write("\">\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; margin-top: 3px; float: left; width: 100%;\">&nbsp;-&nbsp;任务截止时间(可为空)</div>\r\n");
      out.write("\t\t\t\t<select style=\"width: 33%; height: 35px; margin-right: 0.5%; border: 0px solid white; float: left;\" name=\"year\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">年</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2021\">2021</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<select style=\"width: 33%; height: 35px; margin-right: 0.5%; border: 0px solid white; float: left;\" name=\"month\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">月</option>\r\n");
      out.write("\t\t\t\t\t");

						for (int a = 1; a <= 12; a++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(a);
      out.write('"');
      out.write('>');
      out.print(a);
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<select style=\"width: 33%; height: 35px; border: 0px solid white; float: left;\" name=\"day\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">日</option>\r\n");
      out.write("\t\t\t\t\t");

						for (int a = 1; a <= 28; a++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<option value=\"");
      out.print(a);
      out.write('"');
      out.write('>');
      out.print(a);
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; margin-top: 3px; float: left; width: 100%;\">&nbsp;-&nbsp;新建任务类型(与任务类型二选一(无法撤回))</div>\r\n");
      out.write("\t\t\t\t<input style=\"width: 100%; height: 35px; margin-bottom: 3px;\" name=\"newtype\">\r\n");
      out.write("\t\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"float: left; margin-bottom: 2px; margin-top: 3px; float: left; width: 100%;\">&nbsp;-&nbsp;新建任务语言(与任务语言二选一(无法撤回))</div>\r\n");
      out.write("\t\t\t\t<input style=\"width: 100%; height: 35px; margin-bottom: 3px;\" name=\"newlanguage\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<button style=\"width: 58%; margin-left: 21%; height: 55px; border-radius: 5px; border: 0px solid white;\" class=\"light-color\" name=\"send\" value=\"1\">提交</button>\r\n");
      out.write("\t\t\t<div style=\"width: 100%; height: 25px; font-size: 20px; line-height: 25px; color: red;\" align=\"center\">");
      out.print(tips);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
