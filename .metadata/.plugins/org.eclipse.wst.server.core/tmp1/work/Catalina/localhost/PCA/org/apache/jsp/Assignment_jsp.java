/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-03-14 07:11:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Assignment_bean;

public final class Assignment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Assignment_bean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	/*------------------------------------------------------------------------------------------------
	修改人			     
	修改时间 		
	修改内容		
	版本号			 
	-------------------------------------------------------------------------------------------------*/

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>任务</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_style.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Assignment.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"Css/Public_Color/orange.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#F4F5F7\">\r\n");
      out.write("\t");

		request.setCharacterEncoding("UTF-8");//或者指定的编码(GBK或其他)
		String ID = null;
		String pages = null;
		if (request.getAttribute("ID") != null) {
			ID = (String) request.getAttribute("ID");
		} else if (request.getParameter("ID") != null) {
			ID = request.getParameter("ID");
		}
		if (ID == null || "".equals(ID) || "null".equals(ID)) {
			request.setAttribute("alter", "1");
			request.getRequestDispatcher("index.jsp").forward(request, response);
		}
		String showpage = null;
		pages = request.getParameter("page");
		String type1 = null;
		String type2 = null;
		Assignment_bean bean = new Assignment_bean(ID);

		if (request.getParameter("setlocal") != null) {
			type2 = "light-color";
			type1 = "dinylight-color";
			showpage = "Assignment_finished.jsp";
			bean.getfinished();
		} else if ("0".equals(pages)) {
			type2 = "light-color";
			type1 = "dinylight-color";
			showpage = "Assignment_finished.jsp";
			bean.getfinished();
		} else if ("1".equals(pages)) {
			type1 = "light-color";
			type2 = "dinylight-color";
			showpage = "Assignment_unfinish.jsp";
			bean.get_allmission();
		} else {
			type1 = "light-color";
			type2 = "dinylight-color";
			showpage = "Assignment_unfinish.jsp";
			bean.get_allmission();
		}
		String missiondate = bean.missiondate;
		bean.head();//获取头像模块的信息
		String role = bean.role;//获取用户角色
	
      out.write("\r\n");
      out.write("\t<!-- 调用头部页面 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "season.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("role", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(role), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("level", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.level), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("nickiname", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.nickiname), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("sign", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.sign), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("background", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.background), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("headphoto", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.headphoto), request.getCharacterEncoding()), out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "lead.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<!-- 调用任务模块页面 -->\r\n");
      out.write("\t<div class=\"Assignment_lead_block\">\r\n");
      out.write("\t\t<form action=\"Assignment.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"ID\" value=\"");
      out.print(ID);
      out.write("\" style=\"display: none\">\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"finish middle-font ");
      out.print(type1);
      out.write("\" style=\"cursor: pointer;\" name=\"page\" value=\"1\">全部任务</button>\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"finish middle-font ");
      out.print(type2);
      out.write("\" style=\"cursor: pointer; margin-left: 1%;\" name=\"page\" value=\"0\">已完成</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<!-- \r\n");
      out.write("\t\t\t\t<div class=\"search \">\r\n");
      out.write("\t\t\t\t\t<div class=\"search-block\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"search-symble\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"img/lead_photo/搜索.png\" style=\"width: 110%; height:110%;\"/>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"search-form\">\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" style=\"width: 83.5%;height: 25px;\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"submit\" style=\"cursor:pointer;\" class=\"check_button normal-color\" value=\"搜索\" />\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--任务导航信息 -->\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write(".selection {\r\n");
      out.write("\tmargin-left: 2%;\r\n");
      out.write("\twidth: 96%;\r\n");
      out.write("\theight: 28px;\r\n");
      out.write("\tmargin-bottom: 2px;\r\n");
      out.write("\tline-height: 28px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".select_button {\r\n");
      out.write("\tmargin-left: 2%;\r\n");
      out.write("\twidth: 96%;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tpading-top: 2.5%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\t<!--  \r\n");
      out.write("\t\t<div class=\"Assignment_head_block dinylight-color\">\r\n");
      out.write("\t\t\t\t\t<div class=\"selection light-color\">\r\n");
      out.write("\t\t\t\t\t\t类型\r\n");
      out.write("\t\t\t\t\t\t<b>&nbsp;|&nbsp; </b>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"selection light-color\">\r\n");
      out.write("\t\t\t\t\t\t语言\r\n");
      out.write("\t\t\t\t\t\t<b>&nbsp;|&nbsp; </b>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"selection light-color\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:50%;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t\t难度\r\n");
      out.write("\t\t\t\t\t\t\t<b>&nbsp;|&nbsp; </b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:50%;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t\t得分\r\n");
      out.write("\t\t\t\t\t\t\t<b>&nbsp;|&nbsp; </b>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"select_button light-color\">\r\n");
      out.write("\t\t\t\t\t\t<button id=\"button\" class=\"normal-color\" style=\"cursor:pointer;width:15%;height:95%;border:0px solid white;border-radius:3px;\">筛选</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t-->\r\n");
      out.write("\t<div style=\"width: 75%; margin: 0 auto;\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, showpage + ((showpage).indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("missiondate", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(missiondate), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$('#assignment').css('border-bottom-style', 'solid');\r\n");
      out.write("\t\tvar $logo = $('#sign_list li');\r\n");
      out.write("\r\n");
      out.write("\t\t$logo.mouseenter(function() {\r\n");
      out.write("\t\t\t$(this).css('border-bottom-style', 'solid');\r\n");
      out.write("\t\t\t$('#assignment').css('border-bottom-style', 'none');\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t$logo.mouseleave(function() {\r\n");
      out.write("\t\t\t$logo.css('border-bottom-style', 'none');\r\n");
      out.write("\t\t\t$('#assignment').css('border-bottom-style', 'solid');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");

	bean.con.close();

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
