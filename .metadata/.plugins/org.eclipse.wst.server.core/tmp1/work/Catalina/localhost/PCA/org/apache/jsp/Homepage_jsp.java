/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-03-09 17:33:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Homepage_bean;
import bean.getpower;
import bean.*;
import java.util.Random;

public final class Homepage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("bean");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Homepage_bean");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("bean.getpower");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	/*------------------------------------------------------------------------------------------------
	修改人			     
	修改时间 		
	修改内容		
	版本号			 
	-------------------------------------------------------------------------------------------------*/

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("UTF-8"); //或者指定的编码(GBK或其他)
	String ID = (String) request.getSession().getAttribute("ID");
	if (request.getAttribute("ID") != null) {//toHomepage.java页面传来的request
		ID = (String) request.getAttribute("ID");
	} //获取登录用户的ID
	if (request.getParameter("ID") != null) {//通过form表单传递数据过来
		ID = (String) request.getParameter("ID");
	} //获取登录用户的ID
	request.getSession().setAttribute("ID", ID);//设置页面session对象中的ID
	if(ID==null||"".equals(ID)||"null".equals(ID)){
		request.setAttribute("alter", "1");
		request.getRequestDispatcher("index.jsp").forward(request, response);
	}
	Homepage_bean bean = new Homepage_bean(ID); //加载Homepage页面各模块的数据
	String apart = bean.apartment(); //获取部门数据返回值
	String sins[] = bean.get_content(); //加载并提取宠物对话数据
	bean.head(); //运行方法 加载头模块数据	
	String role = bean.role;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>");
      out.print(bean.nickiname);
      out.write("的主页</title>\r\n");
      out.write("<link href=\"Css/Public_Color/orange.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"Css/Public_style.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"Css/Homepage.css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#F4F5F7\">\r\n");
      out.write("\t<!-- 季节模块 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "season.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 头模块 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("role", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(role), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("level", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.level), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("nickiname", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.nickiname), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("sign", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.sign), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("background", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.background), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("headphoto", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(bean.headphoto), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<!-- 导航栏模块 -->\r\n");
      out.write("\t<!-- 把用户ID传递给导航栏，导航栏再传给各个大页面 -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "lead.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"Homepage_whole_block\">\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"dynamic\">\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;官方动态</div>\r\n");
      out.write("\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "dynamic.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
getpower power=new getpower(ID);
if(power.checkpower("8")){

      out.write("\r\n");
      out.write("\t\t<div style=\"width: 28%; height: 190px; float: right;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;部门名片</div>\r\n");
      out.write("\t\t\t<div class=\"card_photo\" align=\"center\">\r\n");
      out.write("\t\t\t\t<img src=\"img/apartment_photo/");
      out.print(apart);
      out.write(".png\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100%; height: 100%; margin: 0 auto;\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
} 
      out.write("\r\n");
      out.write("\t\t<!-- 公告模块 -->\r\n");
      out.write("\t\t<div class=\"notice\">\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;公告</div>\r\n");
      out.write("\t\t\t<div class=\"noticecotent\">\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "notice.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"pet\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"pet_sign\"\r\n");
      out.write("\t\t\t\tstyle=\"left: 57%; top: 915px; line-height: 20px; text-align: center;\"\r\n");
      out.write("\t\t\t\tid=\"pet_sign\"></div>\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;哇塞！宠物 <font style=\"float: right\">更多&nbsp;┃&nbsp;</font>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"pet_area\" id=\"pet_click\">\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "pet.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"calendar\">\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;每日签到</div>\r\n");
      out.write("\t\t\t");

				String calendar = bean.check_clendar(); //获取当天是否签到签到 若已签到则返回用户ID
				String signed = bean.singed_calendar(); //获取用户当月签到的所有的日期
				bean.con.close();
			
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "calendar.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("signed", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(signed), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("ID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(ID), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("calendar", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(calendar), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<script src=\"js/jquery-3.4.1.js\"></script>\r\n");
      out.write("<script src=\"js/loading.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("$(function(){/* 导航栏的动态效果 */\r\n");
      out.write("\t$('#homepage').css('border-bottom-style','solid');\r\n");
      out.write("\tvar $logo = $('#sign_list li');\r\n");
      out.write("\t \r\n");
      out.write("\t \r\n");
      out.write("\t $logo.mouseenter(function(){\r\n");
      out.write("    \t $(this).css('border-bottom-style','solid');\r\n");
      out.write("    \t $('#homepage').css('border-bottom-style','none');\r\n");
      out.write(" \t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t $logo.mouseleave(function(){ \r\n");
      out.write("\t\t  $logo.css('border-bottom-style','none');\r\n");
      out.write("\t\t  $('#homepage').css('border-bottom-style','solid');\r\n");
      out.write("\t\t });\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("$(function(){\r\n");
      out.write("\tvar Sign_array =  new Array();\r\n");
      out.write("\t");
for (int i = 0; i < sins.length; i++) {
      out.write("\r\n");
      out.write("\tSign_array[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.write('"');
      out.print(sins[i]);
      out.write("\";\r\n");
}
      out.write("\r\n");
      out.write("\t$('#pet_sign').hide();\r\n");
      out.write("\t\tvar isClick = true;\r\n");
      out.write("\t\tvar rand;\r\n");
      out.write("\t\t$('#pet_click').click(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t//x上限，y下限     \r\n");
      out.write("\t\t\tvar x =");
      out.print(sins.length - 1);
      out.write(";\r\n");
      out.write("\t\t\tvar y = 0;\r\n");
      out.write("\t\t\trand = parseInt(Math.random() * (x - y + 1) + y);\r\n");
      out.write("\t\t\t$('#pet_sign').html(\"\").append(\"</br>\" + Sign_array[rand]);\r\n");
      out.write("\r\n");
      out.write("\t\t\t//我也不知道为啥 反正这样可以实现效果(Frank)\r\n");
      out.write("\t\t\t$('#pet_sign').show();\r\n");
      out.write("\t\t\t$('#pet_sign').stop();\r\n");
      out.write("\t\t\t$('#pet_sign').css('opacity', 1);\r\n");
      out.write("\t\t\t$('#pet_sign').stop();\r\n");
      out.write("\t\t\t$('#pet_sign').css('opacity', 1).delay(2000).fadeOut(300, \"swing\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
