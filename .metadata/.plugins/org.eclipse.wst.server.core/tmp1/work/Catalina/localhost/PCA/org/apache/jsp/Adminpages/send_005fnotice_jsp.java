/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2021-03-19 06:00:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Adminpages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dao.Admin_tools;

public final class send_005fnotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dao.Admin_tools");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>消息公告</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../Css/Public_Color/orange.css\" />\r\n");
      out.write("\t\t<link href=\"../Css/Public_style.css\" rel=\"stylesheet\" />\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Admin_lead.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("block_id", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("4", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t<div style=\"width:87.5%;margin-left:0.1%;height:824px;float:left;\"class=\"dinylight-color\">\r\n");
      out.write("\t");

	request.setCharacterEncoding("UTF-8");
	String tittlen="";
	String contentn="";
	String tips="标题限制字数 15";
	String ID=(String)request.getSession().getAttribute("ID");
	System.out.println("sendnoticeID:"+ID);
	if(request.getParameter("sendn")!=null){
		System.out.println("发送");
		tittlen=request.getParameter("tittlen");
		contentn=request.getParameter("contentn");
		if(tittlen==null||"null".equals(tittlen)){
			tittlen="";
		}
		if(contentn==null||"null".equals(contentn)){
			contentn="";
		}
		if("".equals(request.getParameter("tittlen"))){
			System.out.println("1");
			tips="未填写标题";		
		}else if("".equals(request.getParameter("contentn"))){
			System.out.println("2");tips="未填写内容";
			
		}else if(tittlen.length()>15){
			tips="标题过长";
		} else{
			Admin_tools tool=new Admin_tools(ID);
			tool.send_notice(tittlen, contentn);
			tool.con.close();
			tips="发送成功";
			tittlen="";
			contentn="";
		}
	}
	
      out.write("\r\n");
      out.write("\t\t<div style=\"float:left;width:35%;\">\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"margin-bottom:2px;float:left;width:100%;margin-right:0.2%;\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;发送通告\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form action=\"send_notice.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t<div style=\"width:100%; height:300px;float:left;\" class=\"dinylight-color\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t<div align=\"center\" style=\"width:100%;height:25px;line-height:25px;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t<font color=\"red\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(tips );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"width:10%;height:100%;float:left;\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:100%;height:75px;line-height:75px;\">\r\n");
      out.write("\t\t\t\t\t\t\t标题:\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:100%;height:225px;line-height:45px;\">\r\n");
      out.write("\t\t\t\t\t\t\t内容:\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div style=\"float:left;width:90%;height:300px;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:100%;height:75px;line-height:45px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"tittlen\" style=\"margin-top:20px;height:35px;width:95%;border:1px solid lightgray;\" value=\"");
      out.print(tittlen);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width:100%;height:225px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea name=\"contentn\" style=\"width:95%;height:201px;margin-top:12px;border:1px solid lightgray;\">");
      out.print(contentn );
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button value=\"1\" name=\"sendn\" style=\"width:45%;height:45px;border:0px solid white;border-radius:30px;\" class=\"light-color\">发送</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"float:left;width:0.1%;height:735px;\" class=\"light-color\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"width:64.9%;height:750px;float:left;\" >\r\n");
      out.write("\t\t\t<div class=\"small-tittle middle-font font-normal-color\" style=\"margin-bottom:2px;float:left;width:100%;margin-right:0.2%;\">\r\n");
      out.write("\t\t\t\t&nbsp;┃&nbsp;发送消息\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"width:100%;height:717px;\">\r\n");
      out.write("\t\t\t");

			String act=request.getParameter("act");
			String allpage=request.getParameter("allpage");
			String nowpage=request.getParameter("nowpage");
			String topage=request.getParameter("topage");
			String role=request.getParameter("role");
			String geterID=request.getParameter("geterID");
			String send=request.getParameter("send");
			String gettype=request.getParameter("gettype");
			String tittle=request.getParameter("tittle");
			String content=request.getParameter("content");
			
			
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "sendtext.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("act", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(act ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("allpage", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(allpage ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("nowpage", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(nowpage ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("topage", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(topage ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("role", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(role ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("geterID", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(geterID ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("send", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(send ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("gettype", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(gettype ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("tittle", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(tittle ), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("content", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(content ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
